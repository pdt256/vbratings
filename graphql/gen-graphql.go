// +build ignore

// This program generates schema.go. It can be invoked by running go generate
package main

import (
	"bytes"
	"fmt"
	"go/parser"
	"go/token"
	"log"
	"os"
	"text/template"
	"time"

	"github.com/pdt256/vbratings/graphql/generator"
)

func main() {
	fmt.Println("Volleyball Ratings GraphQL Schema Generator")

	filePath := `../app/player_rating.go`
	fs := token.NewFileSet()
	node, err := parser.ParseFile(fs, filePath, nil, parser.ParseComments)
	if err != nil {
		log.Fatal(err)
	}
	domainRoot := generator.ParseDomain(node)

	var schema bytes.Buffer
	domainRoot.GraphQLSchema(&schema)

	schemaFile, err := os.Create("schema.go")
	if err != nil {
		log.Fatal(err)
	}
	defer schemaFile.Close()

	packageTemplate.Execute(schemaFile, struct {
		Timestamp time.Time
		Schema    string
	}{
		Timestamp: time.Now(),
		Schema:    schema.String(),
	})
}

var packageTemplate = template.Must(template.New("").Parse(`// Code generated by go generate; DO NOT EDIT.
{{ $tick := "` + "`" + `" }}
// {{ .Timestamp }}
package graphql

func schemaString() string {
	return {{ $tick }}{{ .Schema }}{{ $tick }}
}
`))
